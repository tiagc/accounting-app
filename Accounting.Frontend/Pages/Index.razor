@page "/"
@using BookApp.Backend.Database

<h3>Book</h3>

@if (Books == null)
{
    <p>Loading...</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Book ID</th>
                <th>Book Name</th>
                <th>Bills</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var Book in Books)
            {
                <tr>
                    <td>@Book.Id</td>
                    <td>@Book.BookName</td>
                </tr>

            }
        </tbody>
    </table>
}

<input type="text" @bind="inputValue" />
<button @onclick="CreateBook">Create Book</button>

@code {
    private string inputValue;
    private List<Book> books;

    [Inject]
    public HttpClient HttpClient { get; set; }

    protected override async Task OnInitializedAsync()
    {
        books = await HttpClient.GetFromJsonAsync<List<Book>>("https://accounting-app-backend.azurewebsites.net/Accounting/customer");
    }

    private async Task CreateBook()
    {
        // Assume you have a property called "newBookName" for the new book name
        var newBookName = inputValue;
        var response = await HttpClient.PostAsync($"https://accounting-app-backend.azurewebsites.net/Accounting/Book?BookName={newBookName}", null);
    if (response.IsSuccessStatusCode)
        {
            // Refresh the Book list after creating a new Book
            Books = await HttpClient.GetFromJsonAsync<List<Book>>("https://accounting-app-backend.azurewebsites.net/Accounting/Book");
    }
    }
}
