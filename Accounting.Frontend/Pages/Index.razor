@page "/"
@using Accounting.Backend.Database

<h3>Customers</h3>

@if (customers == null)
{
    <p>Loading...</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Customer ID</th>
                <th>Customer Name</th>
                <th>Bills</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in customers)
            {
                <tr>
                    <td>@customer.Id</td>
                    <td>@customer.CustomerName</td>

                    <td>
                    @foreach (var bill in customer.Bills)
                    {
                        <p>
                            <span>
                                @bill.Id
                            </span>

                            @if (bill.BillType == BillType.Taxes)
                            {
                                <span> Taxes</span>
                            }
                            else
                            {
                                <span> Private</span>
                            }

                            @if (bill.BillStatus == BillStatus.Paid)
                            {
                                <span> Paid</span>
                            }
                            else
                            {
                                <span> Unpaid</span>
                            }
                        </p>
                    }
                    </td>
                </tr>

            }
        </tbody>
    </table>
}

<input type="text" @bind="inputValue" />
<button @onclick="CreateCustomer">Create Customer</button>

@code {
    private string inputValue;
    private List<Customer> customers;

    [Inject]
    public HttpClient HttpClient { get; set; }

    protected override async Task OnInitializedAsync()
    {
        customers = await HttpClient.GetFromJsonAsync<List<Customer>>("https://accounting-app-backend.azurewebsites.net/Accounting/customer");
    }

    private async Task CreateCustomer()
    {
        // Assume you have a property called "newCustomerName" for the new customer name
        var newCustomerName = inputValue;
        var response = await HttpClient.PostAsync($"https://accounting-app-backend.azurewebsites.net/Accounting/customer?customerName={newCustomerName}", null);
    if (response.IsSuccessStatusCode)
        {
            // Refresh the customer list after creating a new customer
            customers = await HttpClient.GetFromJsonAsync<List<Customer>>("https://accounting-app-backend.azurewebsites.net/Accounting/customer");
    }
    }
}
